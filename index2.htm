<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Simple To-Do List</title>
    <style>
        body {
            font-family: Arial, sans-serif;
        }
        #app {
            width: 300px;
            margin: 0 auto;
            text-align: center;
        }
        ul {
            list-style-type: none;
            padding: 0;
        }
        li {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 5px 0;
        }
        .task-input {
            width: 100%;
            padding: 5px;
            margin-bottom: 10px;
        }
        .task-actions {
            display: flex;
            gap: 10px;
        }
    </style>
</head>
<body>
    <div id="app">
        <h1>Simple To-Do List</h1>
        <input id="task-input" class="task-input" type="text" placeholder="Add a task">
        <button id="add-button">Add</button>
        <ul id="task-list"></ul>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function() {
            const taskInput = document.getElementById("task-input");
            const addButton = document.getElementById("add-button");
            const taskList = document.getElementById("task-list");

            // Load tasks from local storage if available
            const tasks = JSON.parse(localStorage.getItem("tasks")) || [];

            // Function to render tasks
            function renderTasks() {
                taskList.innerHTML = "";
                tasks.forEach((task, index) => {
                    const listItem = document.createElement("li");
                    listItem.innerHTML = `
                        ${task}
                        <div class="task-actions">
                            <button onclick="editTask(${index})">Edit</button>
                            <button onclick="deleteTask(${index})">Delete</button>
                        </div>
                    `;
                    taskList.appendChild(listItem);
                });
            }

            // Function to add a task
            function addTask() {
                const taskText = taskInput.value.trim();
                if (taskText !== "") {
                    tasks.push(taskText);
                    localStorage.setItem("tasks", JSON.stringify(tasks));
                    taskInput.value = "";
                    renderTasks();
                }
            }

            // Function to edit a task
            function editTask(index) {
                const updatedTaskText = prompt("Edit task:", tasks[index]);
                if (updatedTaskText !== null) {
                    tasks[index] = updatedTaskText.trim();
                    localStorage.setItem("tasks", JSON.stringify(tasks));
                    renderTasks();
                }
            }

            // Function to delete a task
            function deleteTask(index) {
                if (confirm("Are you sure you want to delete this task?")) {
                    tasks.splice(index, 1);
                    localStorage.setItem("tasks", JSON.stringify(tasks));
                    renderTasks();
                }
            }

            // Event listeners
            addButton.addEventListener("click", addTask);
            renderTasks();
        });
    </script>
</body>
</html>

